name: Deploy to gh pages

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
env:
  CARGO_TERM_COLOR: always
  
concurrency:
  group: "pages"
  cancel-in-progress: false

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Setup wasm-pack
      uses: jetli/wasm-pack-action@v0.4.0
        
    - name: Restore cache
      uses: actions/cache@v3
      with:
        path: frontend/node_packages
        # Generate a new cache whenever packages or source files change.
        key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
        # If source files changed but packages didn't, rebuild from a prior cache.
        restore-keys: |
          ${{ runner.os }}-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

    - name: Build
      run: |
        cd ./frontend
        npm install
        npm run build
        
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v1
      with:
        path: ./frontend/dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
